# Default values for supersecretmessage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: algolia/supersecretmessage
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.2.5"

config:
  vault:
    # address of the Vault server used for storing the temporary secrets, Example: http://vault:8200
    address: "http://vault.svc.cluster.local:8200"
    # Vault Token secret for connect
    token_secret:
      name: "vault-token"
      key: "token"
  server:
    env:
    # HTTP binding address (e.g. :80).
    - name: SUPERSECRETMESSAGE_HTTP_BINDING_ADDRESS
      value: ":80"
    # HTTPS binding address (e.g. :443).
    - name: SUPERSECRETMESSAGE_HTTPS_BINDING_ADDRESS
      value: ""
      # whether to enable HTTPS redirection or not (e.g. true).
    - name: SUPERSECRETMESSAGE_HTTPS_REDIRECT_ENABLED
      value: "false"
      # domain to use for "Auto" TLS, i.e. automatic generation of certificate with Let's Encrypt. See Configuration examples - TLS - Auto TLS.
    - name: SUPERSECRETMESSAGE_TLS_AUTO_DOMAIN
      value: ""
      # certificate filepath to use for "manual" TLS.
    - name: SUPERSECRETMESSAGE_TLS_CERT_FILEPATH
      value: ""
      # certificate key filepath to use for "manual" TLS.
    - name: SUPERSECRETMESSAGE_TLS_CERT_KEY_FILEPATH
      value: ""
      # vault prefix for secrets (default cubbyhole/)
    - name: SUPERSECRETMESSAGE_VAULT_PREFIX
      value: "cubbyhole/"

# Used to define custom livenessProbe settings
livenessProbe:
  # It it the same that .Values.config.server.env. "SUPERSECRETMESSAGE_HTTP_BINDING_ADDRESS"
  port: "80"
  # Path of probe
  path: "/msg"
  # When a probe fails, Kubernetes will try failureThreshold times before giving up
  failureThreshold: 2
  # Number of seconds after the container has started before probe initiates
  initialDelaySeconds: 5
  # How often (in seconds) to perform the probe
  periodSeconds: 10
  # Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # Number of seconds after which the probe times out.
  timeoutSeconds: 5
  scheme: "HTTP"
# Used to define custom readinessProbe settings
readinessProbe:
  # It it the same that .Values.config.server.env. "SUPERSECRETMESSAGE_HTTP_BINDING_ADDRESS"
  port: "80"
  # Path of probe
  path: "/msg"
  # When a probe fails, Kubernetes will try failureThreshold times before giving up
  failureThreshold: 2
  # Number of seconds after the container has started before probe initiates
  initialDelaySeconds: 5
  # How often (in seconds) to perform the probe
  periodSeconds: 10
  # Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # Number of seconds after which the probe times out.
  timeoutSeconds: 5
  scheme: "HTTP"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

strategy:
  type: Recreate

envFrom: []
podAnnotations: {}
podLabels: {}
hostAliases: []
terminationGracePeriodSeconds: ""
priorityClassName: ""
podSecurityContext: {} # Optional
  # fsGroup: 2000

securityContext: {} # Optional
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: supersecretmessage
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 300m
    memory: 512Mi
  requests:
    cpu: 20m
    memory: 64Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: [] # Optional
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: [] # Optional
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
